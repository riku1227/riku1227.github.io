function genBtn()
{
	var mod_app_name_str = document.getElementById("app_mod_name").value;
    var package_name_str = document.getElementById("package_name").value;
	var lib_name_str = document.getElementById("lib_name").value;
    var author_str = document.getElementById("author").value;
    var description_str = document.getElementById("description").value;
    var version_description_str = document.getElementById("version_description").value;
    var zip = new JSZip();
    //home
    var project_properties = "# This file is automatically generated by Android Tools.\n# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n#\n# This file must be checked in Version Control Systems.\n#\n# To customize properties used by the Ant build system use,\n# \"build.properties\", and override values to adapt the script to your\n# project structure.\n\n# Project target.\ntarget=android-10";
    var androidManifest_xml = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\""+package_name_str+"\"\n    android:versionCode=\"1\"\n    android:versionName=\"1.0\">\n    <uses-sdk\n        android:minSdkVersion=\"14\" />\n    <application\n        android:label=\""+mod_app_name_str+"\"\n        android:hasCode=\"false\">\n    </application>\n</manifest>";
    zip.file("project.properties", project_properties);
    zip.file("AndroidManifest.xml", androidManifest_xml);
    //assets
    var assetsDirectory = zip.folder("assets");
    var nmod_manifest_json = "{\n    \"native_libs\" :\n    [\n        \""+"lib"+lib_name_str+".so"+"\"\n    ],\n    \"name\" : \""+mod_app_name_str+"\",\n    \"description\" : \""+description_str+"\",\n    \"author\" : \""+author_str+"\",\n    \"version_info\" :\n    {\n        \"version_name\" : \"1.0\",\n        \"version_code\" : 1,\n        \"version_description_short\" : \""+version_description_str+"\",\n        \"version_description\" : \""+version_description_str+"\"\n    },\n    \"check_json_syntax\" : true\n}";
    zip.file("assets/nmod_manifest.json", nmod_manifest_json);
    //jni
    var jniDirectory = zip.folder("jni");
    var android_mk = "LOCAL_PATH := $(call my-dir)\ninclude $(CLEAR_VARS)\nLOCAL_MODULE := "+lib_name_str+"\nLOCAL_SRC_FILES_RAW := $(shell find $(LOCAL_PATH) -name '*.cpp') $(shell find $(LOCAL_PATH) -name '*.c')\nLOCAL_SRC_FILES := $(LOCAL_SRC_FILES_RAW:$(LOCAL_PATH)/%=%)\nLOCAL_LDLIBS := -L$(LOCAL_PATH)/$(TARGET_ARCH_ABI) -llog -ldl -lminecraftpe -lsubstrate -landroid\nTARGET_NO_UNDEFINED_LDFLAGS :=\ninclude $(BUILD_SHARED_LIBRARY)";
    var application_mk = "NDK_TOOLCHAIN_VERSION := 4.9\nAPP_STL := gnustl_static\nAPP_ABI := armeabi-v7a x86\nAPP_PLATFORM := android-14\nAPP_CFLAGS := -O2 -std=c++11\nAPP_CPPFLAGS += -std=c++11";
    zip.file("jni/Android.mk", android_mk);
    zip.file("jni/Application.mk", application_mk);
    zip.file("jni/Substrate.h","LyogQ3lkaWEgU3Vic3RyYXRlIC0gUG93ZXJmdWwgQ29kZSBJbnNlcnRpb24gUGxhdGZvcm0KICogQ29weXJpZ2h0IChDKSAyMDA4LTIwMTEgIEpheSBGcmVlbWFuIChzYXVyaWspCiovCi8qIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSwgVmVyc2lvbiAzIHt7eyAqLwovKgogKiBTdWJzdHJhdGUgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeSBpdCB1bmRlcgogKiB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgdGhlCiAqIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3IgKGF0IHlvdXIKICogb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KICoKICogU3Vic3RyYXRlIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsIGJ1dCBXSVRIT1VUCiAqIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mIE1FUkNIQU5UQUJJTElUWSBvcgogKiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYwogKiBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuCiAqCiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZQogKiBhbG9uZyB3aXRoIFN1YnN0cmF0ZS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi4KKiovCi8qIH19fSAqLwoKI2lmbmRlZiBTVUJTVFJBVEVfSF8KI2RlZmluZSBTVUJTVFJBVEVfSF8KCiNpZmRlZiBfX0FQUExFX18KI2lmZGVmIF9fY3BsdXNwbHVzCmV4dGVybiAiQyIgewojZW5kaWYKI2luY2x1ZGUgPG1hY2gtby9ubGlzdC5oPgojaWZkZWYgX19jcGx1c3BsdXMKfQojZW5kaWYKCiNpbmNsdWRlIDxvYmpjL3J1bnRpbWUuaD4KI2luY2x1ZGUgPG9iamMvbWVzc2FnZS5oPgojZW5kaWYKCiNpbmNsdWRlIDxkbGZjbi5oPgojaW5jbHVkZSA8c3RkbGliLmg+CgojZGVmaW5lIF9maW5saW5lIFwKICAgIGlubGluZSBfX2F0dHJpYnV0ZV9fKChfX2Fsd2F5c19pbmxpbmVfXykpCiNkZWZpbmUgX2Rpc3VzZWQgXAogICAgX19hdHRyaWJ1dGVfXygoX191bnVzZWRfXykpCgojZGVmaW5lIF9leHRlcm4gXAogICAgZXh0ZXJuICJDIiBfX2F0dHJpYnV0ZV9fKChfX3Zpc2liaWxpdHlfXygiZGVmYXVsdCIpKSkKCiNpZmRlZiBfX2NwbHVzcGx1cwojZGVmaW5lIF9kZWZhdWx0KHZhbHVlKSA9IHZhbHVlCiNlbHNlCiNkZWZpbmUgX2RlZmF1bHQodmFsdWUpCiNlbmRpZgoKI2lmZGVmIF9fY3BsdXNwbHVzCmV4dGVybiAiQyIgewojZW5kaWYKCmJvb2wgTVNIb29rUHJvY2VzcyhwaWRfdCBwaWQsIGNvbnN0IGNoYXIgKmxpYnJhcnkpOwoKdHlwZWRlZiBjb25zdCB2b2lkICpNU0ltYWdlUmVmOwoKTVNJbWFnZVJlZiBNU0dldEltYWdlQnlOYW1lKGNvbnN0IGNoYXIgKmZpbGUpOwp2b2lkICpNU0ZpbmRTeW1ib2woTVNJbWFnZVJlZiBpbWFnZSwgY29uc3QgY2hhciAqbmFtZSk7Cgp2b2lkIE1TSG9va0Z1bmN0aW9uKHZvaWQgKnN5bWJvbCwgdm9pZCAqcmVwbGFjZSwgdm9pZCAqKnJlc3VsdCk7CgojaWZkZWYgX19BUFBMRV9fCiNpZmRlZiBfX2FybV9fCl9fYXR0cmlidXRlX18oKF9fZGVwcmVjYXRlZF9fKSkKSU1QIE1TSG9va01lc3NhZ2UoQ2xhc3MgX2NsYXNzLCBTRUwgc2VsLCBJTVAgaW1wLCBjb25zdCBjaGFyICpwcmVmaXggX2RlZmF1bHQoTlVMTCkpOwojZW5kaWYKdm9pZCBNU0hvb2tNZXNzYWdlRXgoQ2xhc3MgX2NsYXNzLCBTRUwgc2VsLCBJTVAgaW1wLCBJTVAgKnJlc3VsdCk7CiNlbmRpZgoKLyogQmxvY2tMYXVuY2hlciBtb2RpZmljYXRpb25zICovCnZvaWQgTVNTZXRBZGRyZXNzVHJhbnNsYXRpb25GdW5jdGlvbih2b2lkKiAoKnRyYW5zbGF0aW9uRnVuY3Rpb24pKHZvaWQqKSwgY29uc3QgY2hhciogdGVtcEZpbGVQYXR0ZXJuKTsKCiNpZmRlZiBTdWJzdHJhdGVJbnRlcm5hbAp0eXBlZGVmIHZvaWQgKlN1YnN0cmF0ZUFsbG9jYXRvclJlZjsKdHlwZWRlZiBzdHJ1Y3QgX19TdWJzdHJhdGVQcm9jZXNzICpTdWJzdHJhdGVQcm9jZXNzUmVmOwp0eXBlZGVmIHN0cnVjdCBfX1N1YnN0cmF0ZU1lbW9yeSAqU3Vic3RyYXRlTWVtb3J5UmVmOwoKU3Vic3RyYXRlUHJvY2Vzc1JlZiBTdWJzdHJhdGVQcm9jZXNzQ3JlYXRlKFN1YnN0cmF0ZUFsbG9jYXRvclJlZiBhbGxvY2F0b3IsIHBpZF90IHBpZCk7CnZvaWQgU3Vic3RyYXRlUHJvY2Vzc1JlbGVhc2UoU3Vic3RyYXRlUHJvY2Vzc1JlZiBwcm9jZXNzKTsKClN1YnN0cmF0ZU1lbW9yeVJlZiBTdWJzdHJhdGVNZW1vcnlDcmVhdGUoU3Vic3RyYXRlQWxsb2NhdG9yUmVmIGFsbG9jYXRvciwgU3Vic3RyYXRlUHJvY2Vzc1JlZiBwcm9jZXNzLCB2b2lkICpkYXRhLCBzaXplX3Qgc2l6ZSk7CnZvaWQgU3Vic3RyYXRlTWVtb3J5UmVsZWFzZShTdWJzdHJhdGVNZW1vcnlSZWYgbWVtb3J5KTsKI2VuZGlmCgojaWZkZWYgX19jcGx1c3BsdXMKfQojZW5kaWYKCiNpZmRlZiBfX2NwbHVzcGx1cwoKI2lmZGVmIFN1YnN0cmF0ZUludGVybmFsCnN0cnVjdCBTdWJzdHJhdGVIb29rTWVtb3J5IHsKICAgIFN1YnN0cmF0ZU1lbW9yeVJlZiBoYW5kbGVfOwoKICAgIFN1YnN0cmF0ZUhvb2tNZW1vcnkoU3Vic3RyYXRlUHJvY2Vzc1JlZiBwcm9jZXNzLCB2b2lkICpkYXRhLCBzaXplX3Qgc2l6ZSkgOgogICAgICAgIGhhbmRsZV8oU3Vic3RyYXRlTWVtb3J5Q3JlYXRlKE5VTEwsIE5VTEwsIGRhdGEsIHNpemUpKQogICAgewogICAgfQoKICAgIH5TdWJzdHJhdGVIb29rTWVtb3J5KCkgewogICAgICAgIGlmIChoYW5kbGVfICE9IE5VTEwpCiAgICAgICAgICAgIFN1YnN0cmF0ZU1lbW9yeVJlbGVhc2UoaGFuZGxlXyk7CiAgICB9Cn07CiNlbmRpZgoKI2lmZGVmIF9fQVBQTEVfXwoKbmFtZXNwYWNlIGV0bCB7Cgp0ZW1wbGF0ZSA8dW5zaWduZWQgQ2FzZV8+CnN0cnVjdCBDYXNlIHsKICAgIHN0YXRpYyBjaGFyIHZhbHVlW0Nhc2VfICsgMV07Cn07Cgp0eXBlZGVmIENhc2U8dHJ1ZT4gWWVzOwp0eXBlZGVmIENhc2U8ZmFsc2U+IE5vOwoKbmFtZXNwYWNlIGJlIHsKICAgIHRlbXBsYXRlIDx0eXBlbmFtZSBDaGVja2VkXz4KICAgIHN0YXRpYyBZZXMgQ2hlY2tDbGFzc18odm9pZCAoQ2hlY2tlZF86OiopKCkpOwoKICAgIHRlbXBsYXRlIDx0eXBlbmFtZSBDaGVja2VkXz4KICAgIHN0YXRpYyBObyBDaGVja0NsYXNzXyguLi4pOwp9Cgp0ZW1wbGF0ZSA8dHlwZW5hbWUgVHlwZV8+CnN0cnVjdCBJc0NsYXNzIHsKICAgIHZvaWQgZ2NjMzIoKTsKCiAgICBzdGF0aWMgY29uc3QgYm9vbCB2YWx1ZSA9IChzaXplb2YoYmU6OkNoZWNrQ2xhc3NfPFR5cGVfPigwKS52YWx1ZSkgPT0gc2l6ZW9mKFllczo6dmFsdWUpKTsKfTsKCn0KCiNpZmRlZiBfX2FybV9fCnRlbXBsYXRlIDx0eXBlbmFtZSBUeXBlXz4KX19hdHRyaWJ1dGVfXygoX19kZXByZWNhdGVkX18pKQpzdGF0aWMgaW5saW5lIFR5cGVfICpNU0hvb2tNZXNzYWdlKENsYXNzIF9jbGFzcywgU0VMIHNlbCwgVHlwZV8gKmltcCwgY29uc3QgY2hhciAqcHJlZml4ID0gTlVMTCkgewogICAgcmV0dXJuIHJlaW50ZXJwcmV0X2Nhc3Q8VHlwZV8gKj4oTVNIb29rTWVzc2FnZShfY2xhc3MsIHNlbCwgcmVpbnRlcnByZXRfY2FzdDxJTVA+KGltcCksIHByZWZpeCkpOwp9CiNlbmRpZgoKdGVtcGxhdGUgPHR5cGVuYW1lIFR5cGVfPgpzdGF0aWMgaW5saW5lIHZvaWQgTVNIb29rTWVzc2FnZShDbGFzcyBfY2xhc3MsIFNFTCBzZWwsIFR5cGVfICppbXAsIFR5cGVfICoqcmVzdWx0KSB7CiAgICByZXR1cm4gTVNIb29rTWVzc2FnZUV4KF9jbGFzcywgc2VsLCByZWludGVycHJldF9jYXN0PElNUD4oaW1wKSwgcmVpbnRlcnByZXRfY2FzdDxJTVAgKj4ocmVzdWx0KSk7Cn0KCnRlbXBsYXRlIDx0eXBlbmFtZSBUeXBlXz4Kc3RhdGljIGlubGluZSBUeXBlXyAmTVNIb29rSXZhcihpZCBzZWxmLCBjb25zdCBjaGFyICpuYW1lKSB7CiAgICBJdmFyIGl2YXIoY2xhc3NfZ2V0SW5zdGFuY2VWYXJpYWJsZShvYmplY3RfZ2V0Q2xhc3Moc2VsZiksIG5hbWUpKTsKICAgIHZvaWQgKnBvaW50ZXIoaXZhciA9PSBOVUxMID8gTlVMTCA6IHJlaW50ZXJwcmV0X2Nhc3Q8Y2hhciAqPihzZWxmKSArIGl2YXJfZ2V0T2Zmc2V0KGl2YXIpKTsKICAgIHJldHVybiAqcmVpbnRlcnByZXRfY2FzdDxUeXBlXyAqPihwb2ludGVyKTsKfQoKI2RlZmluZSBNU0FkZE1lc3NhZ2UwKF9jbGFzcywgdHlwZSwgYXJnMCkgXAogICAgY2xhc3NfYWRkTWV0aG9kKCQgIyMgX2NsYXNzLCBAc2VsZWN0b3IoYXJnMCksIChJTVApICYkICMjIF9jbGFzcyAjIyAkICMjIGFyZzAsIHR5cGUpOwojZGVmaW5lIE1TQWRkTWVzc2FnZTEoX2NsYXNzLCB0eXBlLCBhcmcwKSBcCiAgICBjbGFzc19hZGRNZXRob2QoJCAjIyBfY2xhc3MsIEBzZWxlY3RvcihhcmcwOiksIChJTVApICYkICMjIF9jbGFzcyAjIyAkICMjIGFyZzAgIyMgJCwgdHlwZSk7CiNkZWZpbmUgTVNBZGRNZXNzYWdlMihfY2xhc3MsIHR5cGUsIGFyZzAsIGFyZzEpIFwKICAgIGNsYXNzX2FkZE1ldGhvZCgkICMjIF9jbGFzcywgQHNlbGVjdG9yKGFyZzA6YXJnMTopLCAoSU1QKSAmJCAjIyBfY2xhc3MgIyMgJCAjIyBhcmcwICMjICQgIyMgYXJnMSAjIyAkLCB0eXBlKTsKI2RlZmluZSBNU0FkZE1lc3NhZ2UzKF9jbGFzcywgdHlwZSwgYXJnMCwgYXJnMSwgYXJnMikgXAogICAgY2xhc3NfYWRkTWV0aG9kKCQgIyMgX2NsYXNzLCBAc2VsZWN0b3IoYXJnMDphcmcxOmFyZzI6KSwgKElNUCkgJiQgIyMgX2NsYXNzICMjICQgIyMgYXJnMCAjIyAkICMjIGFyZzEgIyMgJCAjIyBhcmcyICMjICQsIHR5cGUpOwojZGVmaW5lIE1TQWRkTWVzc2FnZTQoX2NsYXNzLCB0eXBlLCBhcmcwLCBhcmcxLCBhcmcyLCBhcmczKSBcCiAgICBjbGFzc19hZGRNZXRob2QoJCAjIyBfY2xhc3MsIEBzZWxlY3RvcihhcmcwOmFyZzE6YXJnMjphcmczOiksIChJTVApICYkICMjIF9jbGFzcyAjIyAkICMjIGFyZzAgIyMgJCAjIyBhcmcxICMjICQgIyMgYXJnMiAjIyAkICMjIGFyZzMgIyMgJCwgdHlwZSk7CiNkZWZpbmUgTVNBZGRNZXNzYWdlNShfY2xhc3MsIHR5cGUsIGFyZzAsIGFyZzEsIGFyZzIsIGFyZzMsIGFyZzQpIFwKICAgIGNsYXNzX2FkZE1ldGhvZCgkICMjIF9jbGFzcywgQHNlbGVjdG9yKGFyZzA6YXJnMTphcmcyOmFyZzM6YXJnNDopLCAoSU1QKSAmJCAjIyBfY2xhc3MgIyMgJCAjIyBhcmcwICMjICQgIyMgYXJnMSAjIyAkICMjIGFyZzIgIyMgJCAjIyBhcmczICMjICQgIyMgYXJnNCAjIyAkLCB0eXBlKTsKI2RlZmluZSBNU0FkZE1lc3NhZ2U2KF9jbGFzcywgdHlwZSwgYXJnMCwgYXJnMSwgYXJnMiwgYXJnMywgYXJnNCwgYXJnNSkgXAogICAgY2xhc3NfYWRkTWV0aG9kKCQgIyMgX2NsYXNzLCBAc2VsZWN0b3IoYXJnMDphcmcxOmFyZzI6YXJnMzphcmc0OmFyZzU6KSwgKElNUCkgJiQgIyMgX2NsYXNzICMjICQgIyMgYXJnMCAjIyAkICMjIGFyZzEgIyMgJCAjIyBhcmcyICMjICQgIyMgYXJnMyAjIyAkICMjIGFyZzQgIyMgJCAjIyBhcmc1ICMjICQsIHR5cGUpOwoKI2RlZmluZSBNU0hvb2tNZXNzYWdlMChfY2xhc3MsIGFyZzApIFwKICAgIE1TSG9va01lc3NhZ2UoJCAjIyBfY2xhc3MsIEBzZWxlY3RvcihhcmcwKSwgTVNIYWtlKF9jbGFzcyAjIyAkICMjIGFyZzApKQojZGVmaW5lIE1TSG9va01lc3NhZ2UxKF9jbGFzcywgYXJnMCkgXAogICAgTVNIb29rTWVzc2FnZSgkICMjIF9jbGFzcywgQHNlbGVjdG9yKGFyZzA6KSwgTVNIYWtlKF9jbGFzcyAjIyAkICMjIGFyZzAgIyMgJCkpCiNkZWZpbmUgTVNIb29rTWVzc2FnZTIoX2NsYXNzLCBhcmcwLCBhcmcxKSBcCiAgICBNU0hvb2tNZXNzYWdlKCQgIyMgX2NsYXNzLCBAc2VsZWN0b3IoYXJnMDphcmcxOiksIE1TSGFrZShfY2xhc3MgIyMgJCAjIyBhcmcwICMjICQgIyMgYXJnMSAjIyAkKSkKI2RlZmluZSBNU0hvb2tNZXNzYWdlMyhfY2xhc3MsIGFyZzAsIGFyZzEsIGFyZzIpIFwKICAgIE1TSG9va01lc3NhZ2UoJCAjIyBfY2xhc3MsIEBzZWxlY3RvcihhcmcwOmFyZzE6YXJnMjopLCBNU0hha2UoX2NsYXNzICMjICQgIyMgYXJnMCAjIyAkICMjIGFyZzEgIyMgJCAjIyBhcmcyICMjICQpKQojZGVmaW5lIE1TSG9va01lc3NhZ2U0KF9jbGFzcywgYXJnMCwgYXJnMSwgYXJnMiwgYXJnMykgXAogICAgTVNIb29rTWVzc2FnZSgkICMjIF9jbGFzcywgQHNlbGVjdG9yKGFyZzA6YXJnMTphcmcyOmFyZzM6KSwgTVNIYWtlKF9jbGFzcyAjIyAkICMjIGFyZzAgIyMgJCAjIyBhcmcxICMjICQgIyMgYXJnMiAjIyAkICMjIGFyZzMgIyMgJCkpCiNkZWZpbmUgTVNIb29rTWVzc2FnZTUoX2NsYXNzLCBhcmcwLCBhcmcxLCBhcmcyLCBhcmczLCBhcmc0KSBcCiAgICBNU0hvb2tNZXNzYWdlKCQgIyMgX2NsYXNzLCBAc2VsZWN0b3IoYXJnMDphcmcxOmFyZzI6YXJnMzphcmc0OiksIE1TSGFrZShfY2xhc3MgIyMgJCAjIyBhcmcwICMjICQgIyMgYXJnMSAjIyAkICMjIGFyZzIgIyMgJCAjIyBhcmczICMjICQgIyMgYXJnNCAjIyAkKSkKI2RlZmluZSBNU0hvb2tNZXNzYWdlNihfY2xhc3MsIGFyZzAsIGFyZzEsIGFyZzIsIGFyZzMsIGFyZzQsIGFyZzUpIFwKICAgIE1TSG9va01lc3NhZ2UoJCAjIyBfY2xhc3MsIEBzZWxlY3RvcihhcmcwOmFyZzE6YXJnMjphcmczOmFyZzQ6YXJnNTopLCBNU0hha2UoX2NsYXNzICMjICQgIyMgYXJnMCAjIyAkICMjIGFyZzEgIyMgJCAjIyBhcmcyICMjICQgIyMgYXJnMyAjIyAkICMjIGFyZzQgIyMgJCAjIyBhcmc1ICMjICQpKQoKI2RlZmluZSBNU1JlZ2lzdGVyXyhuYW1lLCBkb2xsYXIsIGNvbG9uKSBcCiAgICBzdGF0aWMgY2xhc3MgQ18kICMjIG5hbWUgIyMgJCAjIyBkb2xsYXIgeyBwdWJsaWM6IF9maW5saW5lIENfJCAjIyBuYW1lICMjICQgIyNkb2xsYXIoKSB7IFwKICAgICAgICBNU0hvb2tNZXNzYWdlKCQgIyMgbmFtZSwgQHNlbGVjdG9yKGNvbG9uKSwgTVNIYWtlKG5hbWUgIyMgJCAjIyBkb2xsYXIpKTsgXAogICAgfSB9IFZfJCAjIyBuYW1lICMjICQgIyMgZG9sbGFyOyBcCgojZGVmaW5lIE1TSWdub3JlXyhuYW1lLCBkb2xsYXIsIGNvbG9uKQoKI2RlZmluZSBNU01lc3NhZ2VfKGV4dHJhLCB0eXBlLCBfY2xhc3MsIG5hbWUsIGRvbGxhciwgY29sb24sIGNhbGwsIGFyZ3MuLi4pIFwKICAgIHN0YXRpYyB0eXBlIF8kICMjIG5hbWUgIyMgJCAjIyBkb2xsYXIoQ2xhc3MgX2NscywgdHlwZSAoKl9vbGQpKF9jbGFzcywgU0VMLCAjIyBhcmdzLCAuLi4pLCB0eXBlICgqX3Nwcikoc3RydWN0IG9iamNfc3VwZXIgKiwgU0VMLCAjIyBhcmdzLCAuLi4pLCBfY2xhc3Mgc2VsZiwgU0VMIF9jbWQsICMjIGFyZ3MpOyBcCiAgICBNU0hvb2sodHlwZSwgbmFtZSAjIyAkICMjIGRvbGxhciwgX2NsYXNzIHNlbGYsIFNFTCBfY21kLCAjIyBhcmdzKSB7IFwKICAgICAgICBDbGFzcyBjb25zdCBfY2xzKCQgIyMgbmFtZSk7IFwKICAgICAgICB0eXBlICgqIGNvbnN0IF9vbGQpKF9jbGFzcywgU0VMLCAjIyBhcmdzLCAuLi4pID0gcmVpbnRlcnByZXRfY2FzdDx0eXBlICgqIGNvbnN0KShfY2xhc3MsIFNFTCwgIyMgYXJncywgLi4uKT4oXyAjIyBuYW1lICMjICQgIyMgZG9sbGFyKTsgXAogICAgICAgIHR5cGVkZWYgdHlwZSAoKm1zZ1NlbmRTdXBlcl90KShzdHJ1Y3Qgb2JqY19zdXBlciAqLCBTRUwsICMjIGFyZ3MsIC4uLik7IFwKICAgICAgICBtc2dTZW5kU3VwZXJfdCBjb25zdCBfc3ByKDo6ZXRsOjpJc0NsYXNzPHR5cGU+Ojp2YWx1ZSA/IHJlaW50ZXJwcmV0X2Nhc3Q8bXNnU2VuZFN1cGVyX3Q+KCZvYmpjX21zZ1NlbmRTdXBlcl9zdHJldCkgOiByZWludGVycHJldF9jYXN0PG1zZ1NlbmRTdXBlcl90Pigmb2JqY19tc2dTZW5kU3VwZXIpKTsgXAogICAgICAgIHJldHVybiBfJCAjIyBuYW1lICMjICQgIyMgZG9sbGFyIGNhbGw7IFwKICAgIH0gXAogICAgZXh0cmEobmFtZSwgZG9sbGFyLCBjb2xvbikgXAogICAgc3RhdGljIF9maW5saW5lIHR5cGUgXyQgIyMgbmFtZSAjIyAkICMjIGRvbGxhcihDbGFzcyBfY2xzLCB0eXBlICgqX29sZCkoX2NsYXNzLCBTRUwsICMjIGFyZ3MsIC4uLiksIHR5cGUgKCpfc3ByKShzdHJ1Y3Qgb2JqY19zdXBlciAqLCBTRUwsICMjIGFyZ3MsIC4uLiksIF9jbGFzcyBzZWxmLCBTRUwgX2NtZCwgIyMgYXJncykKCi8qIGZvcigoeD0xO3ghPTc7Kyt4KSl7IGVjaG8gLW4gIiNkZWZpbmUgTVNNZXNzYWdlJHt4fV8oZXh0cmEsIHR5cGUsIF9jbGFzcywgbmFtZSI7Zm9yKCh5PTA7eSE9eDsrK3kpKTtkbyBlY2hvIC1uICIsIHNlbCR5Ijtkb25lO2ZvcigoeT0wO3khPXg7Kyt5KSk7ZG8gZWNobyAtbiAiLCB0eXBlJHksIGFyZyR5Ijtkb25lO2VjaG8gIikgXFwiO2VjaG8gLW4gIiAgICBNU01lc3NhZ2VfKGV4dHJhLCB0eXBlLCBfY2xhc3MsIG5hbWUsIjtmb3IoKHk9MDt5IT14OysreSkpO2RvIGlmIFtbICR5IC1uZSAwIF1dO3RoZW4gZWNobyAtbiAiICMjIjtmaTtlY2hvIC1uICIgc2VsJHkgIyMgJCI7ZG9uZTtlY2hvIC1uICIsICI7Zm9yKCh5PTA7eSE9eDsrK3kpKTtkbyBlY2hvIC1uICJzZWwkeToiO2RvbmU7ZWNobyAtbiAiLCAoX2NscywgX29sZCwgX3Nwciwgc2VsZiwgX2NtZCI7Zm9yKCh5PTA7eSE9eDsrK3kpKTtkbyBlY2hvIC1uICIsIGFyZyR5Ijtkb25lO2VjaG8gLW4gIikiO2ZvcigoeT0wO3khPXg7Kyt5KSk7ZG8gZWNobyAtbiAiLCB0eXBlJHkgYXJnJHkiO2RvbmU7ZWNobyAiKSI7fSAqLwoKI2RlZmluZSBNU01lc3NhZ2UwXyhleHRyYSwgdHlwZSwgX2NsYXNzLCBuYW1lLCBzZWwwKSBcCiAgICBNU01lc3NhZ2VfKGV4dHJhLCB0eXBlLCBfY2xhc3MsIG5hbWUsIHNlbDAsIHNlbDAsIChfY2xzLCBfb2xkLCBfc3ByLCBzZWxmLCBfY21kKSkKI2RlZmluZSBNU01lc3NhZ2UxXyhleHRyYSwgdHlwZSwgX2NsYXNzLCBuYW1lLCBzZWwwLCB0eXBlMCwgYXJnMCkgXAogICAgTVNNZXNzYWdlXyhleHRyYSwgdHlwZSwgX2NsYXNzLCBuYW1lLCBzZWwwICMjICQsIHNlbDA6LCAoX2NscywgX29sZCwgX3Nwciwgc2VsZiwgX2NtZCwgYXJnMCksIHR5cGUwIGFyZzApCiNkZWZpbmUgTVNNZXNzYWdlMl8oZXh0cmEsIHR5cGUsIF9jbGFzcywgbmFtZSwgc2VsMCwgc2VsMSwgdHlwZTAsIGFyZzAsIHR5cGUxLCBhcmcxKSBcCiAgICBNU01lc3NhZ2VfKGV4dHJhLCB0eXBlLCBfY2xhc3MsIG5hbWUsIHNlbDAgIyMgJCAjIyBzZWwxICMjICQsIHNlbDA6c2VsMTosIChfY2xzLCBfb2xkLCBfc3ByLCBzZWxmLCBfY21kLCBhcmcwLCBhcmcxKSwgdHlwZTAgYXJnMCwgdHlwZTEgYXJnMSkKI2RlZmluZSBNU01lc3NhZ2UzXyhleHRyYSwgdHlwZSwgX2NsYXNzLCBuYW1lLCBzZWwwLCBzZWwxLCBzZWwyLCB0eXBlMCwgYXJnMCwgdHlwZTEsIGFyZzEsIHR5cGUyLCBhcmcyKSBcCiAgICBNU01lc3NhZ2VfKGV4dHJhLCB0eXBlLCBfY2xhc3MsIG5hbWUsIHNlbDAgIyMgJCAjIyBzZWwxICMjICQgIyMgc2VsMiAjIyAkLCBzZWwwOnNlbDE6c2VsMjosIChfY2xzLCBfb2xkLCBfc3ByLCBzZWxmLCBfY21kLCBhcmcwLCBhcmcxLCBhcmcyKSwgdHlwZTAgYXJnMCwgdHlwZTEgYXJnMSwgdHlwZTIgYXJnMikKI2RlZmluZSBNU01lc3NhZ2U0XyhleHRyYSwgdHlwZSwgX2NsYXNzLCBuYW1lLCBzZWwwLCBzZWwxLCBzZWwyLCBzZWwzLCB0eXBlMCwgYXJnMCwgdHlwZTEsIGFyZzEsIHR5cGUyLCBhcmcyLCB0eXBlMywgYXJnMykgXAogICAgTVNNZXNzYWdlXyhleHRyYSwgdHlwZSwgX2NsYXNzLCBuYW1lLCBzZWwwICMjICQgIyMgc2VsMSAjIyAkICMjIHNlbDIgIyMgJCAjIyBzZWwzICMjICQsIHNlbDA6c2VsMTpzZWwyOnNlbDM6LCAoX2NscywgX29sZCwgX3Nwciwgc2VsZiwgX2NtZCwgYXJnMCwgYXJnMSwgYXJnMiwgYXJnMyksIHR5cGUwIGFyZzAsIHR5cGUxIGFyZzEsIHR5cGUyIGFyZzIsIHR5cGUzIGFyZzMpCiNkZWZpbmUgTVNNZXNzYWdlNV8oZXh0cmEsIHR5cGUsIF9jbGFzcywgbmFtZSwgc2VsMCwgc2VsMSwgc2VsMiwgc2VsMywgc2VsNCwgdHlwZTAsIGFyZzAsIHR5cGUxLCBhcmcxLCB0eXBlMiwgYXJnMiwgdHlwZTMsIGFyZzMsIHR5cGU0LCBhcmc0KSBcCiAgICBNU01lc3NhZ2VfKGV4dHJhLCB0eXBlLCBfY2xhc3MsIG5hbWUsIHNlbDAgIyMgJCAjIyBzZWwxICMjICQgIyMgc2VsMiAjIyAkICMjIHNlbDMgIyMgJCAjIyBzZWw0ICMjICQsIHNlbDA6c2VsMTpzZWwyOnNlbDM6c2VsNDosIChfY2xzLCBfb2xkLCBfc3ByLCBzZWxmLCBfY21kLCBhcmcwLCBhcmcxLCBhcmcyLCBhcmczLCBhcmc0KSwgdHlwZTAgYXJnMCwgdHlwZTEgYXJnMSwgdHlwZTIgYXJnMiwgdHlwZTMgYXJnMywgdHlwZTQgYXJnNCkKI2RlZmluZSBNU01lc3NhZ2U2XyhleHRyYSwgdHlwZSwgX2NsYXNzLCBuYW1lLCBzZWwwLCBzZWwxLCBzZWwyLCBzZWwzLCBzZWw0LCBzZWw1LCB0eXBlMCwgYXJnMCwgdHlwZTEsIGFyZzEsIHR5cGUyLCBhcmcyLCB0eXBlMywgYXJnMywgdHlwZTQsIGFyZzQsIHR5cGU1LCBhcmc1KSBcCiAgICBNU01lc3NhZ2VfKGV4dHJhLCB0eXBlLCBfY2xhc3MsIG5hbWUsIHNlbDAgIyMgJCAjIyBzZWwxICMjICQgIyMgc2VsMiAjIyAkICMjIHNlbDMgIyMgJCAjIyBzZWw0ICMjICQgIyMgc2VsNSAjIyAkLCBzZWwwOnNlbDE6c2VsMjpzZWwzOnNlbDQ6c2VsNTosIChfY2xzLCBfb2xkLCBfc3ByLCBzZWxmLCBfY21kLCBhcmcwLCBhcmcxLCBhcmcyLCBhcmczLCBhcmc0LCBhcmc1KSwgdHlwZTAgYXJnMCwgdHlwZTEgYXJnMSwgdHlwZTIgYXJnMiwgdHlwZTMgYXJnMywgdHlwZTQgYXJnNCwgdHlwZTUgYXJnNSkKCiNkZWZpbmUgTVNJbnN0YW5jZU1lc3NhZ2UwKHR5cGUsIF9jbGFzcywgYXJncy4uLikgTVNNZXNzYWdlMF8oTVNJZ25vcmVfLCB0eXBlLCBfY2xhc3MgKiwgX2NsYXNzLCAjIyBhcmdzKQojZGVmaW5lIE1TSW5zdGFuY2VNZXNzYWdlMSh0eXBlLCBfY2xhc3MsIGFyZ3MuLi4pIE1TTWVzc2FnZTFfKE1TSWdub3JlXywgdHlwZSwgX2NsYXNzICosIF9jbGFzcywgIyMgYXJncykKI2RlZmluZSBNU0luc3RhbmNlTWVzc2FnZTIodHlwZSwgX2NsYXNzLCBhcmdzLi4uKSBNU01lc3NhZ2UyXyhNU0lnbm9yZV8sIHR5cGUsIF9jbGFzcyAqLCBfY2xhc3MsICMjIGFyZ3MpCiNkZWZpbmUgTVNJbnN0YW5jZU1lc3NhZ2UzKHR5cGUsIF9jbGFzcywgYXJncy4uLikgTVNNZXNzYWdlM18oTVNJZ25vcmVfLCB0eXBlLCBfY2xhc3MgKiwgX2NsYXNzLCAjIyBhcmdzKQojZGVmaW5lIE1TSW5zdGFuY2VNZXNzYWdlNCh0eXBlLCBfY2xhc3MsIGFyZ3MuLi4pIE1TTWVzc2FnZTRfKE1TSWdub3JlXywgdHlwZSwgX2NsYXNzICosIF9jbGFzcywgIyMgYXJncykKI2RlZmluZSBNU0luc3RhbmNlTWVzc2FnZTUodHlwZSwgX2NsYXNzLCBhcmdzLi4uKSBNU01lc3NhZ2U1XyhNU0lnbm9yZV8sIHR5cGUsIF9jbGFzcyAqLCBfY2xhc3MsICMjIGFyZ3MpCiNkZWZpbmUgTVNJbnN0YW5jZU1lc3NhZ2U2KHR5cGUsIF9jbGFzcywgYXJncy4uLikgTVNNZXNzYWdlNl8oTVNJZ25vcmVfLCB0eXBlLCBfY2xhc3MgKiwgX2NsYXNzLCAjIyBhcmdzKQoKI2RlZmluZSBNU0NsYXNzTWVzc2FnZTAodHlwZSwgX2NsYXNzLCBhcmdzLi4uKSBNU01lc3NhZ2UwXyhNU0lnbm9yZV8sIHR5cGUsIENsYXNzLCAkICMjIF9jbGFzcywgIyMgYXJncykKI2RlZmluZSBNU0NsYXNzTWVzc2FnZTEodHlwZSwgX2NsYXNzLCBhcmdzLi4uKSBNU01lc3NhZ2UxXyhNU0lnbm9yZV8sIHR5cGUsIENsYXNzLCAkICMjIF9jbGFzcywgIyMgYXJncykKI2RlZmluZSBNU0NsYXNzTWVzc2FnZTIodHlwZSwgX2NsYXNzLCBhcmdzLi4uKSBNU01lc3NhZ2UyXyhNU0lnbm9yZV8sIHR5cGUsIENsYXNzLCAkICMjIF9jbGFzcywgIyMgYXJncykKI2RlZmluZSBNU0NsYXNzTWVzc2FnZTModHlwZSwgX2NsYXNzLCBhcmdzLi4uKSBNU01lc3NhZ2UzXyhNU0lnbm9yZV8sIHR5cGUsIENsYXNzLCAkICMjIF9jbGFzcywgIyMgYXJncykKI2RlZmluZSBNU0NsYXNzTWVzc2FnZTQodHlwZSwgX2NsYXNzLCBhcmdzLi4uKSBNU01lc3NhZ2U0XyhNU0lnbm9yZV8sIHR5cGUsIENsYXNzLCAkICMjIF9jbGFzcywgIyMgYXJncykKI2RlZmluZSBNU0NsYXNzTWVzc2FnZTUodHlwZSwgX2NsYXNzLCBhcmdzLi4uKSBNU01lc3NhZ2U1XyhNU0lnbm9yZV8sIHR5cGUsIENsYXNzLCAkICMjIF9jbGFzcywgIyMgYXJncykKI2RlZmluZSBNU0NsYXNzTWVzc2FnZTYodHlwZSwgX2NsYXNzLCBhcmdzLi4uKSBNU01lc3NhZ2U2XyhNU0lnbm9yZV8sIHR5cGUsIENsYXNzLCAkICMjIF9jbGFzcywgIyMgYXJncykKCiNkZWZpbmUgTVNJbnN0YW5jZU1lc3NhZ2VIb29rMCh0eXBlLCBfY2xhc3MsIGFyZ3MuLi4pIE1TTWVzc2FnZTBfKE1TUmVnaXN0ZXJfLCB0eXBlLCBfY2xhc3MgKiwgX2NsYXNzLCAjIyBhcmdzKQojZGVmaW5lIE1TSW5zdGFuY2VNZXNzYWdlSG9vazEodHlwZSwgX2NsYXNzLCBhcmdzLi4uKSBNU01lc3NhZ2UxXyhNU1JlZ2lzdGVyXywgdHlwZSwgX2NsYXNzICosIF9jbGFzcywgIyMgYXJncykKI2RlZmluZSBNU0luc3RhbmNlTWVzc2FnZUhvb2syKHR5cGUsIF9jbGFzcywgYXJncy4uLikgTVNNZXNzYWdlMl8oTVNSZWdpc3Rlcl8sIHR5cGUsIF9jbGFzcyAqLCBfY2xhc3MsICMjIGFyZ3MpCiNkZWZpbmUgTVNJbnN0YW5jZU1lc3NhZ2VIb29rMyh0eXBlLCBfY2xhc3MsIGFyZ3MuLi4pIE1TTWVzc2FnZTNfKE1TUmVnaXN0ZXJfLCB0eXBlLCBfY2xhc3MgKiwgX2NsYXNzLCAjIyBhcmdzKQojZGVmaW5lIE1TSW5zdGFuY2VNZXNzYWdlSG9vazQodHlwZSwgX2NsYXNzLCBhcmdzLi4uKSBNU01lc3NhZ2U0XyhNU1JlZ2lzdGVyXywgdHlwZSwgX2NsYXNzICosIF9jbGFzcywgIyMgYXJncykKI2RlZmluZSBNU0luc3RhbmNlTWVzc2FnZUhvb2s1KHR5cGUsIF9jbGFzcywgYXJncy4uLikgTVNNZXNzYWdlNV8oTVNSZWdpc3Rlcl8sIHR5cGUsIF9jbGFzcyAqLCBfY2xhc3MsICMjIGFyZ3MpCiNkZWZpbmUgTVNJbnN0YW5jZU1lc3NhZ2VIb29rNih0eXBlLCBfY2xhc3MsIGFyZ3MuLi4pIE1TTWVzc2FnZTZfKE1TUmVnaXN0ZXJfLCB0eXBlLCBfY2xhc3MgKiwgX2NsYXNzLCAjIyBhcmdzKQoKI2RlZmluZSBNU0NsYXNzTWVzc2FnZUhvb2swKHR5cGUsIF9jbGFzcywgYXJncy4uLikgTVNNZXNzYWdlMF8oTVNSZWdpc3Rlcl8sIHR5cGUsIENsYXNzLCAkICMjIF9jbGFzcywgIyMgYXJncykKI2RlZmluZSBNU0NsYXNzTWVzc2FnZUhvb2sxKHR5cGUsIF9jbGFzcywgYXJncy4uLikgTVNNZXNzYWdlMV8oTVNSZWdpc3Rlcl8sIHR5cGUsIENsYXNzLCAkICMjIF9jbGFzcywgIyMgYXJncykKI2RlZmluZSBNU0NsYXNzTWVzc2FnZUhvb2syKHR5cGUsIF9jbGFzcywgYXJncy4uLikgTVNNZXNzYWdlMl8oTVNSZWdpc3Rlcl8sIHR5cGUsIENsYXNzLCAkICMjIF9jbGFzcywgIyMgYXJncykKI2RlZmluZSBNU0NsYXNzTWVzc2FnZUhvb2szKHR5cGUsIF9jbGFzcywgYXJncy4uLikgTVNNZXNzYWdlM18oTVNSZWdpc3Rlcl8sIHR5cGUsIENsYXNzLCAkICMjIF9jbGFzcywgIyMgYXJncykKI2RlZmluZSBNU0NsYXNzTWVzc2FnZUhvb2s0KHR5cGUsIF9jbGFzcywgYXJncy4uLikgTVNNZXNzYWdlNF8oTVNSZWdpc3Rlcl8sIHR5cGUsIENsYXNzLCAkICMjIF9jbGFzcywgIyMgYXJncykKI2RlZmluZSBNU0NsYXNzTWVzc2FnZUhvb2s1KHR5cGUsIF9jbGFzcywgYXJncy4uLikgTVNNZXNzYWdlNV8oTVNSZWdpc3Rlcl8sIHR5cGUsIENsYXNzLCAkICMjIF9jbGFzcywgIyMgYXJncykKI2RlZmluZSBNU0NsYXNzTWVzc2FnZUhvb2s2KHR5cGUsIF9jbGFzcywgYXJncy4uLikgTVNNZXNzYWdlNl8oTVNSZWdpc3Rlcl8sIHR5cGUsIENsYXNzLCAkICMjIF9jbGFzcywgIyMgYXJncykKCiNkZWZpbmUgTVNPbGRDYWxsKGFyZ3MuLi4pIFwKICAgIF9vbGQoc2VsZiwgX2NtZCwgIyMgYXJncykKI2RlZmluZSBNU1N1cGVyQ2FsbChhcmdzLi4uKSBcCiAgICBfc3ByKCYgKHN0cnVjdCBvYmpjX3N1cGVyKSB7c2VsZiwgY2xhc3NfZ2V0U3VwZXJjbGFzcyhfY2xzKX0sIF9jbWQsICMjIGFyZ3MpCgojZGVmaW5lIE1TSXZhckhvb2sodHlwZSwgbmFtZSkgXAogICAgdHlwZSAmbmFtZShNU0hvb2tJdmFyPHR5cGU+KHNlbGYsICNuYW1lKSkKCiNkZWZpbmUgTVNDbGFzc0hvb2sobmFtZSkgXAogICAgQGNsYXNzIG5hbWU7IFwKICAgIHN0YXRpYyBDbGFzcyAkICMjIG5hbWUgPSBvYmpjX2dldENsYXNzKCNuYW1lKTsKI2RlZmluZSBNU01ldGFDbGFzc0hvb2sobmFtZSkgXAogICAgQGNsYXNzIG5hbWU7IFwKICAgIHN0YXRpYyBDbGFzcyAkJCAjIyBuYW1lID0gb2JqZWN0X2dldENsYXNzKCQgIyMgbmFtZSk7CgojZW5kaWYvKl9fQVBQTEVfXyovCgp0ZW1wbGF0ZSA8dHlwZW5hbWUgVHlwZV8+CnN0YXRpYyBpbmxpbmUgdm9pZCBNU0hvb2tGdW5jdGlvbihUeXBlXyAqc3ltYm9sLCBUeXBlXyAqcmVwbGFjZSwgVHlwZV8gKipyZXN1bHQpIHsKICAgIHJldHVybiBNU0hvb2tGdW5jdGlvbigKICAgICAgICByZWludGVycHJldF9jYXN0PHZvaWQgKj4oc3ltYm9sKSwKICAgICAgICByZWludGVycHJldF9jYXN0PHZvaWQgKj4ocmVwbGFjZSksCiAgICAgICAgcmVpbnRlcnByZXRfY2FzdDx2b2lkICoqPihyZXN1bHQpCiAgICApOwp9Cgp0ZW1wbGF0ZSA8dHlwZW5hbWUgVHlwZV8+CnN0YXRpYyBpbmxpbmUgdm9pZCBNU0hvb2tGdW5jdGlvbihUeXBlXyAqc3ltYm9sLCBUeXBlXyAqcmVwbGFjZSkgewogICAgcmV0dXJuIE1TSG9va0Z1bmN0aW9uKHN5bWJvbCwgcmVwbGFjZSwgcmVpbnRlcnByZXRfY2FzdDxUeXBlXyAqKj4oTlVMTCkpOwp9Cgp0ZW1wbGF0ZSA8dHlwZW5hbWUgVHlwZV8+CnN0YXRpYyBpbmxpbmUgdm9pZCBNU0hvb2tTeW1ib2woVHlwZV8gKiZ2YWx1ZSwgY29uc3QgY2hhciAqbmFtZSwgTVNJbWFnZVJlZiBpbWFnZSA9IE5VTEwpIHsKICAgIHZhbHVlID0gcmVpbnRlcnByZXRfY2FzdDxUeXBlXyAqPihNU0ZpbmRTeW1ib2woaW1hZ2UsIG5hbWUpKTsKfQoKdGVtcGxhdGUgPHR5cGVuYW1lIFR5cGVfPgpzdGF0aWMgaW5saW5lIHZvaWQgTVNIb29rRnVuY3Rpb24oY29uc3QgY2hhciAqbmFtZSwgVHlwZV8gKnJlcGxhY2UsIFR5cGVfICoqcmVzdWx0ID0gTlVMTCkgewogICAgVHlwZV8gKnN5bWJvbDsKICAgIE1TSG9va1N5bWJvbChzeW1ib2wsIG5hbWUpOwogICAgcmV0dXJuIE1TSG9va0Z1bmN0aW9uKHN5bWJvbCwgcmVwbGFjZSwgcmVzdWx0KTsKfQoKI2VuZGlmCgojZGVmaW5lIE1TSG9vayh0eXBlLCBuYW1lLCBhcmdzLi4uKSBcCiAgICBfZGlzdXNlZCBzdGF0aWMgdHlwZSAoKl8gIyMgbmFtZSkoYXJncyk7IFwKICAgIHN0YXRpYyB0eXBlICQgIyMgbmFtZShhcmdzKQoKI2lmZGVmIF9fY3BsdXNwbHVzCiNkZWZpbmUgTVNIYWtlKG5hbWUpIFwKICAgICYkICMjIG5hbWUsICZfICMjIG5hbWUKI2Vsc2UKI2RlZmluZSBNU0hha2UobmFtZSkgXAogICAgJiQgIyMgbmFtZSwgKHZvaWQgKiopICZfICMjIG5hbWUKI2VuZGlmCgojZGVmaW5lIE1TSW5pdGlhbGl6ZSBcCiAgICBfX2F0dHJpYnV0ZV9fKChfX2NvbnN0cnVjdG9yX18pKSBzdGF0aWMgdm9pZCBfTVNJbml0aWFsaXplKHZvaWQpCgojZGVmaW5lIEZvdW5kYXRpb25fZiAiL1N5c3RlbS9MaWJyYXJ5L0ZyYW1ld29ya3MvRm91bmRhdGlvbi5mcmFtZXdvcmsvRm91bmRhdGlvbiIKI2RlZmluZSBVSUtpdF9mICIvU3lzdGVtL0xpYnJhcnkvRnJhbWV3b3Jrcy9VSUtpdC5mcmFtZXdvcmsvVUlLaXQiCiNkZWZpbmUgSmF2YVNjcmlwdENvcmVfZiAiL1N5c3RlbS9MaWJyYXJ5L1ByaXZhdGVGcmFtZXdvcmtzL0phdmFTY3JpcHRDb3JlLmZyYW1ld29yay9KYXZhU2NyaXB0Q29yZSIKI2RlZmluZSBJT0tpdF9mICIvU3lzdGVtL0xpYnJhcnkvRnJhbWV3b3Jrcy9JT0tpdC5mcmFtZXdvcmsvSU9LaXQiCgojZW5kaWYvL1NVQlNUUkFURV9IXw==",{base64: true});
    zip.file("jni/main.cpp","I2luY2x1ZGUgPGpuaS5oPgojaW5jbHVkZSA8ZGxmY24uaD4KI2luY2x1ZGUgPHN0cmluZz4KI2luY2x1ZGUgPHNzdHJlYW0+CiNpbmNsdWRlIDxhbmRyb2lkL2xvZy5oPgojaW5jbHVkZSAic3Vic3RyYXRlLmgiCgpKTklFWFBPUlQgamludCBKTklfT25Mb2FkKEphdmFWTSogdm0sIHZvaWQqIHJlc2VydmVkKSB7CiAgICAKICAgIHJldHVybiBKTklfVkVSU0lPTl8xXzI7Cn0=", {base64: true});
    //jni/targetArch
    var armeabi_v7aDirectory = zip.folder("jni/armeabi-v7a");
    var x86Directory = zip.folder("jni/x86");
zip.generateAsync({type:"blob"})
.then(function(content) {
    // see FileSaver.js
    saveAs(content, mod_app_name_str+".zip");
});
}